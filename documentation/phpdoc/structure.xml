<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="thenaterhood.com">
  <file path="core_feed.php" hash="5266037951b389cffd3a5de9acf92b4d" package="Default">
    <docblock line="2">
      <description>Contains utilities and classes for generating an atom feed.</description>
      <long-description>&lt;p&gt;Relies
on the postObj class for retrieving and outputting post data in the
feed. Requires existing instances of the config and session classes.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Nate Levesque &lt;public@thenaterhood.com&gt;&#10;Language: PHP&#10;Filename: core_feed.php"/>
    </docblock>
    <include line="16" type="Include" package="Default">
      <name>core_blog.php</name>
      <docblock line="13">
        <description>Include the main blog functions and classes</description>
        <long-description></long-description>
      </docblock>
    </include>
    <function namespace="global" line="140" package="Default">
      <name>generateFeed</name>
      <full_name>\generateFeed</full_name>
      <docblock line="134">
        <description>Generates an atom feed and returns it</description>
        <long-description></long-description>
        <tag line="134" name="return" description="(atom_feed): an instance of the atom_feed class" type="\$atom">
          <type by_reference="false">\$atom</type>
        </tag>
      </docblock>
    </function>
    <class final="false" abstract="false" namespace="global" line="22" package="Default">
      <extends>\dataMonger</extends>
      <name>feed</name>
      <full_name>\feed</full_name>
      <docblock line="18">
        <description>Defines a data object to contain an atom feed as items
are added and the feed is updated then returned</description>
        <long-description></long-description>
      </docblock>
      <property final="false" static="false" visibility="private" line="29" namespace="global" package="Default">
        <name>$items</name>
        <default></default>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
          <tag line="24" name="var" description="- an array of postObj instances" type="\$items">
            <type by_reference="false">\$items</type>
          </tag>
          <tag line="24" name="var" description="- the feed metadata - location, title, author, datestamps" type="\$container">
            <type by_reference="false">\$container</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="31">
          <description>Creates an empty atom feed object with metadata</description>
          <long-description></long-description>
          <tag line="31" name="param" description="(str): a title for the atom feed" type="\" variable="$title"/>
          <tag line="31" name="param" description="(str): the base url for the feed" type="\" variable="$link"/>
          <tag line="31" name="param" description="(str): a description or summary of the feed" type="\" variable="$description"/>
          <tag line="31" name="param" description="(str): a datestamp for the feed, in standard atom format" type="\" variable="$feedstamp"/>
        </docblock>
        <argument line="39">
          <name>$title</name>
          <default></default>
          <type/>
        </argument>
        <argument line="39">
          <name>$link</name>
          <default></default>
          <type/>
        </argument>
        <argument line="39">
          <name>$description</name>
          <default></default>
          <type/>
        </argument>
        <argument line="39">
          <name>$feedstamp</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="Default">
        <name>new_item</name>
        <full_name>new_item</full_name>
        <docblock line="50">
          <description>Adds an item to the feed as an object in the object's
items array</description>
          <long-description></long-description>
          <tag line="50" name="param" description="- a fully initialized instance of the postObj&#10;class." type="\" variable="$postObject"/>
        </docblock>
        <argument line="58">
          <name>$postObject</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="69" package="Default">
        <name>output</name>
        <full_name>output</full_name>
        <docblock line="63">
          <description>Returns a valid feed with the requested format.</description>
          <long-description></long-description>
          <tag line="63" name="param" description="- the type of feed to return (atom/rss). Defaults&#10;to atom (superior) if the type given not recognized." type="\" variable="$type"/>
        </docblock>
        <argument line="69">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="87" package="Default">
        <name>atom</name>
        <full_name>atom</full_name>
        <docblock line="80">
          <description>Returns a displayable representation of the feed
with appropriate code added.</description>
          <long-description>&lt;p&gt;Relies on the postObj
atom_output() function to generate code for individidual
feed items. Returns ATOM format.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="110" package="Default">
        <name>rss</name>
        <full_name>rss</full_name>
        <docblock line="106">
          <description>Returns a displayable representation of the feed with
appropriate code added for RSS format.</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="api_saneString.php" hash="7067281ac608ef3d28b4931f45796d2d" package="Default">
    <include line="12" type="Include" package="Default">
      <name>core_web.php</name>
    </include>
    <include line="13" type="Include" package="Default">
      <name>core_json.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file api_saneString.php</error>
    </parse_markers>
  </file>
  <file path="api_post.php" hash="d44f269a13dd9068698845846e804068" package="Default">
    <include line="12" type="Include" package="Default">
      <name>core_blog.php</name>
    </include>
    <include line="13" type="Include" package="Default">
      <name>core_json.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file api_post.php</error>
    </parse_markers>
  </file>
  <file path="core_redirect.php" hash="d163cec1e8d25d8833d86199840ef828" package="Default">
    <docblock line="2">
      <description>Contains classes to manage generating page redirects</description>
      <long-description/>
      <tag line="2" name="author" description="Nate Levesque &lt;public@thenaterhood.com&gt;&#10;Language: PHP&#10;Filename: core_redirect.php"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends/>
      <name>redirect</name>
      <full_name>\redirect</full_name>
      <docblock line="12">
        <description>Provides a class for redirecting pages</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="22" namespace="global" package="Default">
        <name>$origin</name>
        <default/>
        <docblock line="18">
          <description/>
          <long-description/>
          <tag line="18" name="var" description="- the page to redirect from" type="\$origin">
            <type by_reference="false">\$origin</type>
          </tag>
          <tag line="18" name="var" description="- the destination to redirect to" type="\$destination">
            <type by_reference="false">\$destination</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="22" namespace="global" package="Default">
        <name>$destination</name>
        <default/>
        <docblock line="18">
          <description/>
          <long-description/>
          <tag line="18" name="var" description="- the page to redirect from" type="\$origin">
            <type by_reference="false">\$origin</type>
          </tag>
          <tag line="18" name="var" description="- the destination to redirect to" type="\$destination">
            <type by_reference="false">\$destination</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="24">
          <description>Produces an instance of the class</description>
          <long-description/>
          <tag line="24" name="param" description="- the url accessed originally" type="\" variable="$origin"/>
          <tag line="24" name="param" description="- the url to redirect to" type="\" variable="$destination"/>
        </docblock>
        <argument line="30">
          <name>$origin</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$destination</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="Default">
        <name>test</name>
        <full_name>test</full_name>
        <docblock line="35">
          <description>Provides a simple text output to check if the class
was initiated correctly</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Default">
        <name>apply</name>
        <full_name>apply</full_name>
        <docblock line="44">
          <description>Applies the redirect to the page</description>
          <long-description/>
          <tag line="44" name="param" description="- the type of redirect to use" type="\" variable="$type"/>
        </docblock>
        <argument line="49">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="64" package="Default">
        <name>apply_301</name>
        <full_name>apply_301</full_name>
        <docblock line="60">
          <description>Performs a 301 (permanent) redirect</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="75" package="Default">
        <name>apply_302</name>
        <full_name>apply_302</full_name>
        <docblock line="71">
          <description>Performs a 302 (temporary) redirect</description>
          <long-description/>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="94" package="Default">
      <extends>\redirect</extends>
      <name>condRedirect</name>
      <full_name>\condRedirect</full_name>
      <docblock line="83">
        <description>Manages conditionally redirecting pages based
on the requested uri and a given uri to redirect from.</description>
        <long-description>&lt;p&gt;Checks to see if the uri requested by the user contains
the uri to redirect from, and prepares to perform the
redirect if so.&lt;/p&gt;

&lt;p&gt;Relies on the redirect class to manage the actual redirecting,
this class is primarly an interface to it that deals with the
conditional aspect.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="private" line="100" namespace="global" package="Default">
        <name>$apply</name>
        <default/>
        <docblock line="96">
          <description/>
          <long-description/>
          <tag line="96" name="var" description="- whether or not the redirect needs to occur" type="\$apply">
            <type by_reference="false">\$apply</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="101">
          <description>Creates an instance of the conditional redirect class
and decides whether the redirect will be performed</description>
          <long-description/>
          <tag line="101" name="param" description="- a chosen uri to redirect from" type="\" variable="$origin"/>
          <tag line="101" name="param" description="- a uri to redirect to" type="\" variable="$destination"/>
          <tag line="101" name="param" description="- the uri requested by the user" type="\" variable="$uri"/>
        </docblock>
        <argument line="109">
          <name>$origin</name>
          <default/>
          <type/>
        </argument>
        <argument line="109">
          <name>$destination</name>
          <default/>
          <type/>
        </argument>
        <argument line="109">
          <name>$uri</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="123" package="Default">
        <name>apply</name>
        <full_name>apply</full_name>
        <docblock line="118">
          <description>Applies the redirect to the page if the redirect should happen</description>
          <long-description/>
          <tag line="118" name="param" description="- the type of redirect to apply" type="\" variable="$type"/>
        </docblock>
        <argument line="123">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="core_sitemap.php" hash="b5986d9c9954ba65648994d32b0bf992" package="Default">
    <docblock line="2">
      <description>Contains classes for constructing an xml sitemap</description>
      <long-description/>
      <tag line="2" name="author" description="Nate Levesque &lt;public@thenaterhood.com&gt;"/>
      <tag line="2" name="copyright" description="Nate Levesque 2013&#10;Language: PHP&#10;Filename: core_sitemap.php"/>
    </docblock>
    <function namespace="global" line="115" package="Default">
      <name>createSitemap</name>
      <full_name>\createSitemap</full_name>
      <docblock line="105">
        <description>Generates a sitemap given a list of local and web paths
which correspond to each other</description>
        <long-description/>
        <tag line="105" name="param" description="(list): a list of local paths to search for files in" type="\global\" variable="$localpath"/>
        <tag line="105" name="param" description="(list): a list of web addresses, which correspond to the localpaths" type="\global\" variable="$webpath"/>
        <tag line="105" name="param" description="(list): a list of file prefixes to search for in the dir" type="\global\" variable="$delimeters"/>
        <tag line="105" name="return" description="(sitemap): an xml sitemap" type="\$sitemap">
          <type by_reference="false">\$sitemap</type>
        </tag>
      </docblock>
      <argument line="115">
        <name>$localpath</name>
        <default/>
        <type/>
      </argument>
      <argument line="115">
        <name>$webpath</name>
        <default/>
        <type/>
      </argument>
      <argument line="115">
        <name>$delimeters</name>
        <default/>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" namespace="global" line="17" package="Default">
      <extends/>
      <name>urlset</name>
      <full_name>\urlset</full_name>
      <docblock line="13">
        <description>Defines a data object to contain an atom feed as items
are added and the feed is updated then returned</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="22" namespace="global" package="Default">
        <name>$items</name>
        <default/>
        <docblock line="19">
          <description/>
          <long-description/>
          <tag line="19" name="var" description="- an array of url objects" type="\$items">
            <type by_reference="false">\$items</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="24">
          <description>Creates an empty sitemap class</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="Default">
        <name>new_item</name>
        <full_name>new_item</full_name>
        <docblock line="32">
          <description>Adds an item to the feed as an object in the object's
items array</description>
          <long-description/>
          <tag line="32" name="param" description="(str): the web address of the item's source" type="\" variable="$loc"/>
          <tag line="32" name="param" description="(str): the modification date of the item" type="\" variable="$lastmod"/>
        </docblock>
        <argument line="39">
          <name>$loc</name>
          <default/>
          <type/>
        </argument>
        <argument line="39">
          <name>$lastmod</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="Default">
        <name>output</name>
        <full_name>output</full_name>
        <docblock line="44">
          <description>Returns a displayable representation of the sitemap
with appropriate code added.</description>
          <long-description/>
          <tag line="44" name="return" description="(string) - an xml encoded output of the class" type="\$r">
            <type by_reference="false">\$r</type>
          </tag>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="67" package="Default">
      <extends/>
      <name>url</name>
      <full_name>\url</full_name>
      <docblock line="64">
        <description>Creates a class to contain an item in the sitemap</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="public" line="73" namespace="global" package="Default">
        <name>$loc</name>
        <default/>
        <docblock line="69">
          <description/>
          <long-description/>
          <tag line="69" name="var" description="- the web address of the page" type="\$loc">
            <type by_reference="false">\$loc</type>
          </tag>
          <tag line="69" name="var" description="- the most recent modification of the page" type="\$lastmod">
            <type by_reference="false">\$lastmod</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="73" namespace="global" package="Default">
        <name>$lastmod</name>
        <default/>
        <docblock line="69">
          <description/>
          <long-description/>
          <tag line="69" name="var" description="- the web address of the page" type="\$loc">
            <type by_reference="false">\$loc</type>
          </tag>
          <tag line="69" name="var" description="- the most recent modification of the page" type="\$lastmod">
            <type by_reference="false">\$lastmod</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="81" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="75">
          <description>Creates the data object to contain the atom feed item.</description>
          <long-description/>
          <tag line="75" name="param" description="(str): the web address of the item source" type="\" variable="$link"/>
          <tag line="75" name="param" description="(str): the item modification date" type="\" variable="$lastmod"/>
        </docblock>
        <argument line="81">
          <name>$link</name>
          <default/>
          <type/>
        </argument>
        <argument line="81">
          <name>$lastmod</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="Default">
        <name>output</name>
        <full_name>output</full_name>
        <docblock line="88">
          <description>Produces the coded output of the item that can be
returned and displayed or saved</description>
          <long-description/>
          <tag line="88" name="return" description="- an xml-encoded representation of the item" type="\$item">
            <type by_reference="false">\$item</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="core_web.php" hash="657ed3cf237d96090d3f4ff4557a2d3e" package="Default">
    <docblock line="2">
      <description>Contains functions for basic web capabilities such as reading
variables from the URL (safely), setting/getting cookies and config
options.</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Nate Levesque &lt;public@thenaterhood.com&gt;"/>
      <tag line="2" name="copyright" description="Nate Levesque 2013&#10;Language: PHP&#10;Filename: core_web.php"/>
    </docblock>
    <include line="17" type="Include" package="Default">
      <name>core_config.php</name>
      <docblock line="14">
        <description>Include the config file</description>
        <long-description></long-description>
      </docblock>
    </include>
    <function namespace="global" line="218" package="Default">
      <name>chooseInclude</name>
      <full_name>\chooseInclude</full_name>
      <docblock line="207">
        <description>Checks to see if the preferred file exists, and if it does
returns it, otherwise it returns the secondary file, which ideally
should be a file (like an error page) that is guaranteed to exist.</description>
        <long-description></long-description>
        <tag line="207" name="param" description="(string): the preferred page to include" type="\global\" variable="$preferred"/>
        <tag line="207" name="param" description="(string): the secondary, emergency page to include" type="\global\" variable="$secondary"/>
        <tag line="207" name="return" description="(string): the page that should be included" type="\$page">
          <type by_reference="false">\$page</type>
        </tag>
      </docblock>
      <argument line="218">
        <name>$preferred</name>
        <default></default>
        <type/>
      </argument>
      <argument line="218">
        <name>$secondary</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="236" package="Default">
      <name>randomGreeting</name>
      <full_name>\randomGreeting</full_name>
      <docblock line="228">
        <description>Displays a string with a random greeting and the string
the function was called with.</description>
        <long-description></long-description>
        <tag line="228" name="param" description="(str): a string, preferably a name" type="\global\" variable="$first_name"/>
        <tag line="228" name="return" description="a string with a personal greeting" type="\-">
          <type by_reference="false">\-</type>
        </tag>
      </docblock>
      <argument line="236">
        <name>$first_name</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="329" package="Default">
      <name>getConfigOption</name>
      <full_name>\getConfigOption</full_name>
      <docblock line="319">
        <description>Built to abstract retrieving config variables, since
they're now contained in a class this is just for legacy
support until everything else gets moved off
of using this function</description>
        <long-description></long-description>
        <tag line="319" name="param" description="- the name of a config key to retrieve" type="\global\" variable="$key"/>
        <tag line="319" name="return" description="the value of the config key" type="\-">
          <type by_reference="false">\-</type>
        </tag>
      </docblock>
      <argument line="329">
        <name>$key</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="true" namespace="global" line="26" package="Default">
      <extends/>
      <name>dataMonger</name>
      <full_name>\dataMonger</full_name>
      <docblock line="19">
        <description>Provides an abstract class to define a standard way
of managing data for the classes that are managing
things like session data, posts, etc.</description>
        <long-description></long-description>
        <tag line="19" name="since" description="4/13/2013"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="31" namespace="global" package="Default">
        <name>$container</name>
        <default></default>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
          <tag line="28" name="var" description="- a container for data, preferrably assoc array" type="\$container">
            <type by_reference="false">\$container</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="Default">
        <name>dump</name>
        <full_name>dump</full_name>
        <docblock line="33">
          <description>Returns the contents of the container</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="48" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="42">
          <description>Retrieves a field from the container, assuming the container
is an associative array.</description>
          <long-description></long-description>
          <tag line="42" name="param" description="- the item to retrieve" type="\" variable="$name"/>
        </docblock>
        <argument line="48">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="61" package="Default">
        <name>output</name>
        <full_name>output</full_name>
        <docblock line="54">
          <description>Defines an abstract function to deal with outputting
the data in different forms</description>
          <long-description></long-description>
          <tag line="54" name="param" description="- the type of output desired. Depends on the&#10;facilities offered by the inheriting class." type="\" variable="$type"/>
        </docblock>
        <argument line="61">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="73" package="Default">
      <extends>\dataMonger</extends>
      <name>session</name>
      <full_name>\session</full_name>
      <docblock line="66">
        <description>Provides a common interface for picking up variables from the
user in a clean way, so that internal variables for pulling
pages and otherwise can be managed more easily and sanitation
settings are more easily applied site-wide.</description>
        <long-description></long-description>
      </docblock>
      <property final="false" static="false" visibility="private" line="79" namespace="global" package="Default">
        <name>$varDefs</name>
        <default></default>
        <docblock line="75">
          <description></description>
          <long-description></long-description>
          <tag line="75" name="var" description="(array) - the variables to be contained" type="\$request">
            <type by_reference="false">\$request</type>
          </tag>
          <tag line="75" name="var" description="(assoc. array) - the variables and assignments" type="\$varDefs">
            <type by_reference="false">\$varDefs</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="88" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="81">
          <description>Iterates through all the variables requested in $request
and sets them to their defaults or from the URL/cookie.</description>
          <long-description></long-description>
          <tag line="81" name="param" description="(array) - a list of variables to retrieve" type="\" variable="$request"/>
        </docblock>
        <argument line="88">
          <name>$request</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="102" package="Default">
        <name>output</name>
        <full_name>output</full_name>
        <argument line="102">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="123" package="Default">
      <extends/>
      <name>sanitation</name>
      <full_name>\sanitation</full_name>
      <docblock line="114">
        <description>Manages sanitizing user input.</description>
        <long-description>&lt;p&gt;Currently works only for strings,
but adding functions to sanitize other data types is trivial.
Retrieving sanitized values from the class involves invoking
the __get function with the type, str, arr, bool, etc for whichever
sanitation functions are implemented. The sanitization for the
requested return is called (returns an empty object if the
sanitization can't convert the current one to the requested one).&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="129" namespace="global" package="Default">
        <name>$dirty</name>
        <default></default>
        <docblock line="125">
          <description></description>
          <long-description></long-description>
          <tag line="125" name="var" description="(str) - the string retrieved" type="\$dirty">
            <type by_reference="false">\$dirty</type>
          </tag>
          <tag line="125" name="var" description="(int) - the maximum allowed length of the string" type="\$length">
            <type by_reference="false">\$length</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="129" namespace="global" package="Default">
        <name>$length</name>
        <default></default>
        <docblock line="125">
          <description></description>
          <long-description></long-description>
          <tag line="125" name="var" description="(str) - the string retrieved" type="\$dirty">
            <type by_reference="false">\$dirty</type>
          </tag>
          <tag line="125" name="var" description="(int) - the maximum allowed length of the string" type="\$length">
            <type by_reference="false">\$length</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="140" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="131">
          <description>Constructs an instance of the class
containing the original variable and the sanitized
variable</description>
          <long-description></long-description>
          <tag line="131" name="param" description="(str) - the raw variable contents" type="\" variable="$rawVar"/>
          <tag line="131" name="param" description="(int) - a maximum length for the variable" type="\" variable="$length"/>
        </docblock>
        <argument line="140">
          <name>$rawVar</name>
          <default></default>
          <type/>
        </argument>
        <argument line="140">
          <name>$length</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="158" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="147">
          <description>Returns a sanitized version of the variable.</description>
          <long-description>&lt;p&gt;If the requested
type is not the same as the actual type, the class will
attempt to convert it to the type if possible. Note that
list cannot become a string.&lt;/p&gt;</long-description>
          <tag line="147" name="param" description="- the type of data to return (str, bool, arr, etc)" type="\" variable="$type"/>
          <tag line="147" name="return" description="a sanitized variable" type="\-">
            <type by_reference="false">\-</type>
          </tag>
        </docblock>
        <argument line="158">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="169" package="Default">
        <name>str</name>
        <full_name>str</full_name>
        <docblock line="163">
          <description>Verify that a string is made of html-safe characters and
short enough to fit where it belongs.</description>
          <long-description>&lt;p&gt;Basically some simple
input sanitizing for nonsecure things.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="195" package="Default">
        <name>boo</name>
        <full_name>boo</full_name>
        <docblock line="192">
          <description>Return a simple boolean based on the variable</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="248" package="Default">
      <extends>\sanitation</extends>
      <name>varGetter</name>
      <full_name>\varGetter</full_name>
      <docblock line="244">
        <description>Provides an interface for retrieving variables using a specific
method or by searching through each method to find a variable.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="257" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="250">
          <description>Constructs an instance of the class and finds the variable</description>
          <long-description></long-description>
          <tag line="250" name="param" description="- the name of the variable" type="\" variable="$name"/>
          <tag line="250" name="param" description="(optional) - the allowed length of the variable" type="\" variable="$length"/>
          <tag line="250" name="param" description="(optional) - the method to use" type="\" variable="$method"/>
        </docblock>
        <argument line="257">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="288" package="Default">
        <name>post</name>
        <full_name>post</full_name>
        <docblock line="284">
          <description>Retrieves a variable via post</description>
          <long-description></long-description>
          <tag line="284" name="param" description="- the name of the variable" type="\" variable="$name"/>
        </docblock>
        <argument line="288">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="296" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="292">
          <description>Retrieves a variable via get</description>
          <long-description></long-description>
          <tag line="292" name="param" description="- the name of the variable" type="\" variable="$name"/>
        </docblock>
        <argument line="296">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="304" package="Default">
        <name>cookie</name>
        <full_name>cookie</full_name>
        <docblock line="300">
          <description>Retrieves a variable via a cookie</description>
          <long-description></long-description>
          <tag line="300" name="param" description="- the name of the variable" type="\" variable="$name"/>
        </docblock>
        <argument line="304">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="312" package="Default">
        <name>fallback</name>
        <full_name>fallback</full_name>
        <docblock line="308">
          <description>Retrieves a variable via the default</description>
          <long-description></long-description>
          <tag line="308" name="param" description="- the name of the variable" type="\" variable="$name"/>
        </docblock>
        <argument line="312">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="102" code="50010">No DocBlock was found for method output()</error>
      <notice line="250" code="50013">Parameter $length could not be found in __construct()</notice>
      <notice line="250" code="50013">Parameter $method could not be found in __construct()</notice>
    </parse_markers>
  </file>
  <file path="core_config.php" hash="3b7e3aafb7adf4ed669d7770239f93d2" package="Default">
    <docblock line="2">
      <description>Contains configuration settings for the site engine to use
as a php class that can be directly accessed.</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Nate Levesque &lt;public@thenaterhood.com&gt;&#10;Language: PHP&#10;Filename: core_config.php"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="17" package="Default">
      <extends/>
      <name>config</name>
      <full_name>\config</full_name>
      <docblock line="12">
        <description>Defines a class to hold variables for configuration
options.</description>
        <long-description>&lt;p&gt;All variables are accessible only internally
to keep things fairly clean.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="true" visibility="private" line="23" namespace="global" package="Default">
        <name>$webcore_root</name>
        <default></default>
        <docblock line="19">
          <description>variables are documented where they are set lower in the code
and so documenting here as per phpdoc standards appears excessive.</description>
          <long-description></long-description>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="24" namespace="global" package="Default">
        <name>$dynamic_directory</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="25" namespace="global" package="Default">
        <name>$auto_feed_regen</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="26" namespace="global" package="Default">
        <name>$auto_file_regen</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="27" namespace="global" package="Default">
        <name>$save_dynamics</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="28" namespace="global" package="Default">
        <name>$post_directory</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="29" namespace="global" package="Default">
        <name>$default_visitor_name</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="30" namespace="global" package="Default">
        <name>$hidden_files</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="31" namespace="global" package="Default">
        <name>$posts_per_page</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="32" namespace="global" package="Default">
        <name>$site_domain</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="33" namespace="global" package="Default">
        <name>$site_author</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="34" namespace="global" package="Default">
        <name>$tracking_code</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="35" namespace="global" package="Default">
        <name>$friendly_urls</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="36" namespace="global" package="Default">
        <name>$feed_type</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="39" namespace="global" package="Default">
        <name>$name</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="40" namespace="global" package="Default">
        <name>$id</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="41" namespace="global" package="Default">
        <name>$konami</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="42" namespace="global" package="Default">
        <name>$node</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="43" namespace="global" package="Default">
        <name>$track</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="44" namespace="global" package="Default">
        <name>$start</name>
        <default></default>
      </property>
      <property final="false" static="true" visibility="private" line="45" namespace="global" package="Default">
        <name>$end</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="47">
          <description>Sets the configuration options en-masse.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="170" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="163">
          <description>Returns the value of the requested config key</description>
          <long-description></long-description>
          <tag line="163" name="param" description="- the name of the key" type="\" variable="$setting"/>
          <tag line="163" name="return" description="the value the key is associated with" type="\-">
            <type by_reference="false">\-</type>
          </tag>
        </docblock>
        <argument line="170">
          <name>$setting</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="24" code="50018">No DocBlock was found for property $dynamic_directory</error>
      <error line="25" code="50018">No DocBlock was found for property $auto_feed_regen</error>
      <error line="26" code="50018">No DocBlock was found for property $auto_file_regen</error>
      <error line="27" code="50018">No DocBlock was found for property $save_dynamics</error>
      <error line="28" code="50018">No DocBlock was found for property $post_directory</error>
      <error line="29" code="50018">No DocBlock was found for property $default_visitor_name</error>
      <error line="30" code="50018">No DocBlock was found for property $hidden_files</error>
      <error line="31" code="50018">No DocBlock was found for property $posts_per_page</error>
      <error line="32" code="50018">No DocBlock was found for property $site_domain</error>
      <error line="33" code="50018">No DocBlock was found for property $site_author</error>
      <error line="34" code="50018">No DocBlock was found for property $tracking_code</error>
      <error line="35" code="50018">No DocBlock was found for property $friendly_urls</error>
      <error line="36" code="50018">No DocBlock was found for property $feed_type</error>
      <error line="39" code="50018">No DocBlock was found for property $name</error>
      <error line="40" code="50018">No DocBlock was found for property $id</error>
      <error line="41" code="50018">No DocBlock was found for property $konami</error>
      <error line="42" code="50018">No DocBlock was found for property $node</error>
      <error line="43" code="50018">No DocBlock was found for property $track</error>
      <error line="44" code="50018">No DocBlock was found for property $start</error>
      <error line="45" code="50018">No DocBlock was found for property $end</error>
    </parse_markers>
  </file>
  <file path="core_json.php" hash="e2c5d258a2e58515577399fb9aff1617" package="Default">
    <docblock line="2">
      <description>Constructs json data</description>
      <long-description/>
      <tag line="2" name="author" description="Nate Levesque &lt;public@thenaterhood.com&gt;&#10;Language: PHP&#10;Filename: core_json.php"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="14" package="Default">
      <extends/>
      <name>jsonMaker</name>
      <full_name>\jsonMaker</full_name>
      <docblock line="11">
        <description>Constructs an array of json data from an associative array</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="19" namespace="global" package="Default">
        <name>$jsonData</name>
        <default/>
        <docblock line="16">
          <description/>
          <long-description/>
          <tag line="16" name="var" description="- json data" type="\$jsonData">
            <type by_reference="false">\$jsonData</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="21">
          <description>Creates json data from an associative array using
php's builtin json_encode function</description>
          <long-description/>
          <tag line="21" name="param" description="- an associative array" type="\dataMap" variable="$dataMap">
            <type by_reference="false">\dataMap</type>
          </tag>
        </docblock>
        <argument line="27">
          <name>$dataMap</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="Default">
        <name>output</name>
        <full_name>output</full_name>
        <docblock line="32">
          <description>Returns the json data</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="api_session.php" hash="1ae2a35449e6c9cc4c940e3a1ebaed4f" package="Default">
    <include line="12" type="Include" package="Default">
      <name>core_web.php</name>
    </include>
    <include line="13" type="Include" package="Default">
      <name>core_json.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file api_session.php</error>
    </parse_markers>
  </file>
  <file path="core_blog.php" hash="95aa5d129d569e415c4d7e08ca5ca44e" package="Default">
    <docblock line="2">
      <description>Contains classes and functions for retrieving, displaying, and
managing blog posts and other aspects of the blog platform</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Nate Levesque &lt;public@thenaterhood.com&gt;&#10;Language: PHP&#10;Filename: core_blog.php"/>
    </docblock>
    <include line="15" type="Include" package="Default">
      <name>core_web.php</name>
      <docblock line="12">
        <description>Includes the core_web functions</description>
        <long-description></long-description>
      </docblock>
    </include>
    <function namespace="global" line="180" package="Default">
      <name>getPostList</name>
      <full_name>\getPostList</full_name>
      <docblock line="175">
        <description>Creates a list of files in the working directory, sorts
and reverses the list, and returns it.</description>
        <long-description>&lt;p&gt;Intended for working
with blog posts stored as text files with date-coded filenames&lt;/p&gt;</long-description>
      </docblock>
    </function>
    <function namespace="global" line="217" package="Default">
      <name>checkInventory</name>
      <full_name>\checkInventory</full_name>
      <docblock line="212">
        <description>Checks the number of files in the current directory and
compares it to how many are listed in the current inventory.</description>
        <long-description>&lt;p&gt;If the number doesn't match, it returns False.&lt;/p&gt;</long-description>
      </docblock>
    </function>
    <function namespace="global" line="239" package="Default">
      <name>regenInventory</name>
      <full_name>\regenInventory</full_name>
      <docblock line="236">
        <description>Regenerates the blog inventory file</description>
        <long-description></long-description>
      </docblock>
    </function>
    <function namespace="global" line="268" package="Default">
      <name>RandomLine</name>
      <full_name>\RandomLine</full_name>
      <docblock line="261">
        <description>Returns a random line of a given file.</description>
        <long-description>&lt;p&gt;Used mainly for generating random suggestions
for additional blog posts to read.&lt;/p&gt;</long-description>
        <tag line="261" name="param" description="- a filename to pull a line from" type="\global\" variable="$filename"/>
      </docblock>
      <argument line="268">
        <name>$filename</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="282" package="Default">
      <name>getSuggestions</name>
      <full_name>\getSuggestions</full_name>
      <docblock line="274">
        <description>Generates and displays a list of additional 'suggested' blog
posts.</description>
        <long-description>&lt;p&gt;Right now picks them randomly, but in the future might
rely on a better algorithm.&lt;/p&gt;</long-description>
        <tag line="274" name="param" description="(int): how many to generate and display" type="\global\" variable="$number"/>
        <tag line="274" name="param" description="(string): a tag or tags to use for generating suggestions" type="\global\" variable="$tag"/>
      </docblock>
      <argument line="282">
        <name>$number</name>
        <default></default>
        <type/>
      </argument>
      <argument line="282">
        <name>$tag</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="302" package="Default">
      <name>getPosts</name>
      <full_name>\getPosts</full_name>
      <docblock line="292">
        <description>Lists the files in a directory and returns an array of them
out to the given length section</description>
        <long-description></long-description>
        <tag line="292" name="param" description="(int) - a starting index for the files" type="\global\" variable="$start"/>
        <tag line="292" name="param" description="(int) - an ending index for the files" type="\global\" variable="$end"/>
        <tag line="292" name="return" description="(array) - an array of post objects" type="\$posts">
          <type by_reference="false">\$posts</type>
        </tag>
      </docblock>
      <argument line="302">
        <name>$start</name>
        <default></default>
        <type/>
      </argument>
      <argument line="302">
        <name>$end</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" namespace="global" line="27" package="Default">
      <extends>\dataMonger</extends>
      <name>postObj</name>
      <full_name>\postObj</full_name>
      <docblock line="17">
        <description>Contains everything to do with retrieving and outputting
posts in multiple forms.</description>
        <long-description>&lt;p&gt;Is capable of retrieving posts stored
in .json format (preferred when available) as well as plaintext
(file syntax described below in constructor).&lt;/p&gt;

&lt;p&gt;Contains functions to output the post data in html format
for displaying to a page, and atom format for use in generating
an atom feed.&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="29">
          <description>Reads and parses a post file and creates an instance
of the class with the post data.</description>
          <long-description>&lt;p&gt;Capable of managing
posts in json and plaintext, but prefers json if
a json file exists for the requested post.&lt;/p&gt;</long-description>
          <tag line="29" name="param" description="(string) - a yyyy.mm.dd string of a nodefile" type="\nodefile" variable="$nodefile">
            <type by_reference="false">\nodefile</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$nodefile</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="Default">
        <name>output</name>
        <full_name>output</full_name>
        <docblock line="106">
          <description>Relies a little on modifications that haven't been
made yet.</description>
          <long-description></long-description>
        </docblock>
        <argument line="110">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="119" package="Default">
        <name>atom</name>
        <full_name>atom</full_name>
        <docblock line="115">
          <description>Produces the coded output of the item that can be
returned and displayed or saved in an atom feed</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="135" package="Default">
        <name>rss</name>
        <full_name>rss</full_name>
        <docblock line="131">
          <description>Produces the coded output of the item that can be returned
and displayed or saved in an rss feed</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="152" package="Default">
        <name>html</name>
        <full_name>html</full_name>
        <docblock line="148">
          <description>Produces the coded output of the item that can be displayed
on an html page</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="168" package="Default">
        <name>list_item_output</name>
        <full_name>list_item_output</full_name>
        <docblock line="163">
          <description>Returns a string containing the post title
and tags, suitable for outputting in an atom feed (maybe)
or an html list</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="106" code="50015">Argument $type is missing from the Docblock of output()</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <namespace name="global" full_name="global"/>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
